{"ast":null,"code":"var _jsxFileName = \"/Users/brentbaker/Desktop/Brent/CryptOps/cryptops-analysis/cryptops-analysis/src/components/theme-switcher/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams, Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\nimport useLocalStorage from 'use-local-storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeMode = mode => {\n  _s();\n\n  const defaultDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [theme, setTheme] = useLocalStorage('theme', defaultDark ? 'dark' : 'light');\n\n  const switchTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"dot\",\n      onClick: switchTheme,\n      children: [console.log(theme), \"Switch to \", theme === 'light' ? 'Dark' : 'Light', \" Theme\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeMode, \"cU7RfcDtWjaFuZGISXTRa2p1rXs=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = ThemeMode;\nexport default ThemeMode;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeMode\");","map":{"version":3,"sources":["/Users/brentbaker/Desktop/Brent/CryptOps/cryptops-analysis/cryptops-analysis/src/components/theme-switcher/index.js"],"names":["React","useState","useEffect","useQuery","useParams","Link","styled","useLocalStorage","ThemeMode","mode","defaultDark","window","matchMedia","matches","theme","setTheme","switchTheme","newTheme","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,kBAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAGA,MAAMC,SAAS,GAAIC,IAAD,IAAU;AAAA;;AAExB,QAAMC,WAAW,GAAGC,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAtE;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,eAAe,CAAC,OAAD,EAAUG,WAAW,GAAG,MAAH,GAAY,OAAjC,CAAzC;;AAEA,QAAMM,WAAW,GAAG,MAAM;AACxB,UAAMC,QAAQ,GAAGH,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9C;AACAC,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAHD;;AAKF,sBACE;AAAA,2BAEE;AAAM,MAAA,KAAK,EAAC,KAAZ;AAAkB,MAAA,OAAO,EAAED,WAA3B;AAAA,iBACKE,OAAO,CAACC,GAAR,CAAYL,KAAZ,CADL,gBAEeA,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAF5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArBD;;GAAMN,S;UAGwBD,e;;;KAHxBC,S;AAuBN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useParams, Link } from \"react-router-dom\";\nimport styled from \"@emotion/styled\";\n\nimport useLocalStorage from 'use-local-storage';\n\n\nconst ThemeMode = (mode) => {\n\n    const defaultDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    const [theme, setTheme] = useLocalStorage('theme', defaultDark ? 'dark' : 'light');\n\n    const switchTheme = () => {\n      const newTheme = theme === 'light' ? 'dark' : 'light';\n      setTheme(newTheme);\n    }\n\n  return (\n    <div>\n\n      <span class=\"dot\" onClick={switchTheme}>\n          {console.log(theme)}\n          Switch to {theme === 'light' ? 'Dark' : 'Light'} Theme\n      </span>\n\n    </div>\n\n);\n};\n\nexport default ThemeMode;\n\n"]},"metadata":{},"sourceType":"module"}